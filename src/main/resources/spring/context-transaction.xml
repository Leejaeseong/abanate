<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"	   
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   					   http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		   			       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		                   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		                   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	
	<!-- 트랜잭션 관리자 등록
			 일반적으로는 org.springframework.jdbc.datasource.DataSourceTransactionManager를 트랜잭션 관리자로 사용하지만
			 
			 JPA 사용을 위해서는  org.springframework.orm.jpa.JpaTransactionManager를 트랜잭션 관리자로 등록해야 한다.
			 이 트랜잭션 관리자는 DataSourceTransactionManager가 하던 역할도 수행하므로 JPA뿐만 아니라
			 jdbcTemplate, MyBatis와 함께 사용할 수 있다.
	-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <!--   
        <property name="dataSource" ref="dataSource"/>
        -->
    </bean>    
    
    <!-- AOP에 사용하기 위한 트랜잭션 Interceptor 추가 
    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
		   <props>
			<prop key="save">PROPAGATION_REQUIRED</prop>
		   </props>
		</property>
    </bean>
    -->
    
</beans>